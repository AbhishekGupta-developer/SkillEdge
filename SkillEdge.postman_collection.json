{
	"info": {
		"_postman_id": "4ee5ff60-6c74-4d1e-b477-2b1720df5135",
		"name": "SkillEdge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41965744"
	},
	"item": [
		{
			"name": "Server Status",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api",
					"host": [
						"{{host}}"
					],
					"path": [
						"api"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register Course",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Spring Boot\",\r\n    \"description\": \"Introduction to Spring Boot, Setting up Spring Boot with Spring Initializr, Spring Boot Project Structure, Spring Boot Starter Dependencies, Spring Boot Auto Configuration, Spring Boot Annotations, Creating RESTful APIs with Spring Boot, Handling HTTP Methods (GET, POST, PUT, DELETE), Path Variables and Request Parameters, Using @RestController and @RequestMapping, Data Binding with @RequestBody and @ResponseBody, Integrating Spring Data JPA with Spring Boot, Configuring DataSource and JPA Properties, Creating Repository Interfaces, CRUD Operations with Spring Boot and JPA, Custom Queries using @Query, Pagination and Sorting, Exception Handling using @ControllerAdvice and @ExceptionHandler, Validation using Hibernate Validator and @Valid, Spring Boot Application Properties and YAML, Profiles in Spring Boot, Connecting with MySQL/PostgreSQL Database, Logging with SLF4J and Logback, Spring Boot DevTools for Live Reload, Unit Testing with JUnit and Mockito, Testing REST APIs with MockMvc, Consuming REST APIs using RestTemplate and WebClient, Introduction to Spring Boot Security, Securing REST APIs with Basic Auth and JWT, Integrating Swagger/OpenAPI for API Documentation, Actuator for Monitoring and Metrics, Deploying Spring Boot Application to Tomcat, Building Executable JAR with Maven/Gradle, Dockerizing Spring Boot Application, Introduction to Microservices with Spring Boot, Spring Cloud Overview (Config, Eureka, Feign, Gateway), Best Practices in Spring Boot Development\",\r\n    \"fee\": \"8500\",\r\n    \"duration\": \"3.0\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/course",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"course"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Course",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/course/3",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"course",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Courses",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/course",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"course"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Course",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Java Fullstack (Old)\",\r\n    \"description\": \"Java fullstack course containing Frontend (HTML/CSS, JS, REACT) and Backend Core Java and Advance Java (Servlet, JSP/JSTL, Spring, Hibernate)\",\r\n    \"fee\": 20060,\r\n    \"duration\": 6.0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/course/1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"course",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove Course",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/course?id=3",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"course"
					],
					"query": [
						{
							"key": "id",
							"value": "3"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register student",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Rashmika\",\r\n    \"gender\": \"FEMALE\",\r\n    \"address\": \"Gurgaon\",\r\n    \"email\": \"rashmika@gmaikl.com\",\r\n    \"phone\": \"1234567894\",\r\n    \"courseId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/student",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"student"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get student page",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/student/page?pageNumber=0&pageSize=10&sortBy=name&orderIn=desc",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"student",
						"page"
					],
					"query": [
						{
							"key": "pageNumber",
							"value": "0"
						},
						{
							"key": "pageSize",
							"value": "10"
						},
						{
							"key": "sortBy",
							"value": "name"
						},
						{
							"key": "orderIn",
							"value": "desc"
						}
					]
				}
			},
			"response": []
		}
	]
}